@model OnlineStore.ProductViewEditViewModel

@{
    ViewBag.Title = "Edit";
    try
    {
        var role = Convert.ToInt16(Session["userrole"].ToString());
        if (role == 1)
        {
            Layout = "~/Views/Shared/AdminLayoutPage.cshtml";
        }
        else if (role == 2)
        {
            Layout = "~/Views/Shared/StaffLayoutPage.cshtml";
        }
        else if (role == 3)
        {
            Layout = "~/Views/Shared/DeveloperLayoutPage.cshtml";
        }
    }
    catch (Exception)
    {

    }
}


    <script>
        jQuery(document).ready(function () {
            Main.init();
            Index.init();
        });
    </script>
<div class="row">
    <div class="col-sm-2">
        <a href="@Url.Action("Show", "Products")" class="demo btn btn-blue">
            <i class="fa fa-arrow-left">
            </i> | Back to list
        </a>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading">
        <i class="fa fa-external-link-square"></i> Edit Product
        <div class="panel-tools">
            <a class="btn btn-xs btn-link panel-collapse collapses" href="#">
            </a>

        </div>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            if (ViewBag.DisplayMessage == "success")
            {
                if (ViewData.ModelState[""] != null)
                {
                    <div class="bs-example">
                        <div class="alert alert-success fade in">
                            <a href="#" class="close" data-dismiss="alert">×</a>
                            <strong>Success!</strong>@Html.ValidationSummary(true, "", new { @class = "text-success" })<br />
                        </div>
                    </div>
                }
            }
            else if (ViewBag.DisplayMessage == "Info")
            {
                if (ViewData.ModelState[""] != null)
                {
                    <div class="bs-example">
                        <div class="alert alert-danger fade in">
                            <a href="#" class="close" data-dismiss="alert">×</a>
                            <strong>Error!</strong>@Html.ValidationSummary(true, "", new { @class = "text-danger" })<br />
                        </div>
                    </div>
                }
            }

            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                
                
                @Html.HiddenFor(model => model.ProductID)

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSKU, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductSKU, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                        @Html.ValidationMessageFor(model => model.ProductSKU, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => model.CartDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CartDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CartDescription, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LongDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Availability, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingFee, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShippingFee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShippingFee, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
