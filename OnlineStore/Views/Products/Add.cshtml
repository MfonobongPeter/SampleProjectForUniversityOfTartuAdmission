@model OnlineStore.ProductViewModel

@{
    ViewBag.Title = "Create Product";
    try
    {
        var role = Convert.ToInt16(Session["userrole"].ToString());
        if (role == 1)
        {
            Layout = "~/Views/Shared/AdminLayoutPage.cshtml";
        }
        else if (role == 2)
        {
            Layout = "~/Views/Shared/StaffLayoutPage.cshtml";
        }
        else if (role == 3)
        {
            Layout = "~/Views/Shared/DeveloperLayoutPage.cshtml";
        }
    }
    catch (Exception)
    {

    }
}
    <script type="text/jscript">
        $(document).ready(function () {
            $('#CategoryID').change(function () {
                $.getJSON('/Products/SubCatList/' + $('#CategoryID').val(), function (data) {
                    var items = '<option>---Select SubCategory---</option>';
                    $.each(data, function (i, SubCategory) {
                        items += "<option value='" + SubCategory.Value + "'>" + SubCategory.Text + "</option>";
                    });
                    $('#SubCategory').html(items);
                });
            });
        });
</script>

<script type="text/javascript">
    jQuery(document).ready(function () {
        Main.init();
        Index.init();
    });
</script>

<div class="row">
    <div class="col-sm-2">
        <a href="@Url.Action("Show", "Products")" class="demo btn btn-blue">
            <i class="fa fa-arrow-left">
            </i> | Back to list
        </a>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading">
        <i class="fa fa-external-link-square"></i>
        Add Product
        <div class="panel-tools">
            <a class="btn btn-xs btn-link panel-collapse collapses" href="#">
            </a>

        </div>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Add", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            if (ViewBag.DisplayMessage == "success")
            {
                if (ViewData.ModelState[""] != null)
                {
                    <div class="bs-example">
                        <div class="alert alert-success fade in">
                            <a href="#" class="close" data-dismiss="alert">×</a>
                            <strong>Success!</strong>@Html.ValidationSummary(true, "", new { @class = "text-success" })<br />
                        </div>
                    </div>
                }
            }
            else if (ViewBag.DisplayMessage == "Info")
            {
                if (ViewData.ModelState[""] != null)
                {
                    <div class="bs-example">
                        <div class="alert alert-danger fade in">
                            <a href="#" class="close" data-dismiss="alert">×</a>
                            <strong>Error!</strong>@Html.ValidationSummary(true, "", new { @class = "text-danger" })<br />
                        </div>
                    </div>
                }
            }
            
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
               
                <hr />
                
               
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryID, (IEnumerable<SelectListItem>)ViewBag.fkCategoryList, "---Select---", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.SubCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SubCategoryID, (IEnumerable<SelectListItem>)ViewBag.fkSubCategoryList, "---Select---", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryID", ViewBag.LoadCategoryID as SelectList, "---Select Category---", new { id = "CategoryID", @class = "form-control", @Required = "required" })
                    </div>
                </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.SubCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select id="SubCategory" name="SubCategory" class="form-control" required="required">
                            <option value="">---Select SubCategory---</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSKU, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductSKU, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductSKU, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductUnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductUnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductUnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductshortDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductshortDesc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductshortDesc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductLongDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductLongDesc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductLongDesc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSideView, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductSideView, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                        @Html.ValidationMessageFor(model => model.ProductSideView, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSideViewThumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductSideViewThumbnail, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                        @Html.ValidationMessageFor(model => model.ProductSideViewThumbnail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductFrontView, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductFrontView, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                        @Html.ValidationMessageFor(model => model.ProductFrontView, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductFrontViewThumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductFrontViewThumbnail, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                        @Html.ValidationMessageFor(model => model.ProductFrontViewThumbnail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductWeight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductWeight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductWeight, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductColour, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductColour, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductColour, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.ProductDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductDiscount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductDiscount, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                   <div class="form-group">
                        @Html.LabelFor(model => model.ShippingFee, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ShippingFee, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingFee, "", new { @class = "text-danger" })
                        </div>
                    </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
