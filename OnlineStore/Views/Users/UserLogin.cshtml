
@model UserLoginViewModel

@{
    ViewBag.Title = "Login";
    try
    {
        var role = Convert.ToInt16(Session["userrole"].ToString());
        if (role == 1)
        {
            Layout = "~/Views/Shared/AdminLayoutPage.cshtml";
        }        
        else if (role == 3)
        {
            Layout = "~/Views/Shared/DeveloperLayoutPage.cshtml";
        }
    }
    catch (Exception)
    {

    }
}
    <script>
        jQuery(document).ready(function () {
            Main.init();
            Index.init();
        });
    </script>
<h4>Login</h4>
<form role="form" class="form-horizontal" method="POST">
    <div class="form-horizontal">
       @if (ViewBag.DisplayMessage == "success")
       {
           if (ViewData.ModelState[""] != null)
           {
            <div class="bs-example">
                <div class="alert alert-success fade in">
                    <a href="#" class="close" data-dismiss="alert">×</a>
                    <strong>Success!</strong>@Html.ValidationSummary(true, "", new { @class = "text-success" })<br />
                </div>
            </div>
           }
       }
       else if (ViewBag.DisplayMessage == "Info")
       {
           if (ViewData.ModelState[""] != null)
           {
            <div class="bs-example">
                <div class="alert alert-danger fade in">
                    <a href="#" class="close" data-dismiss="alert">×</a>
                    <strong>Alert!</strong>@Html.ValidationSummary(true, "", new { @class = "text-danger" })<br />
                </div>
            </div>
           }
       }
        <hr />
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </div>
    </div>
   </form>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


