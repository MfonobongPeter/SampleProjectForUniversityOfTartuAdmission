@model UserLoginViewModel
@{
    ViewBag.Title = "CustomerLogin";
    Layout = "~/Views/Shared/FrontEndLayoutPage.cshtml";
}

<div id="content">
    <div class="container">

        <div class="col-md-12">

            <ul class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index","Home")">Home</a>
                </li>
                <li>Customer Login</li>
            </ul>

        </div>

        <div class="col-md-6">
            <div class="box">
                <h3>New account</h3>

                <p class="lead">Not our registered customer yet?</p>
                <p>Click<a href="@Url.Action("Register","Home")"> here</a>  to register</p>
                <p class="text-muted">If you have any questions, please feel free to <a href="@Url.Action("Contact","Home")">contact us</a> we appreciate your feedback</p>

                <hr>               
            </div>
        </div>

        <div class="col-md-6">
            <div class="box">
                
                <p class="lead">Already our customer?</p>
                <p class="text-muted">
                    Please use the form below to login.
                </p>
                <hr>
                <form action="@Url.Action("CustomerLogin", "Home")" method="post">
                    @if (ViewBag.DisplayMessage == "success")
                    {
                        if (ViewData.ModelState[""] != null)
                        {
                            <div class="bs-example">
                                <div class="alert alert-success fade in">
                                    <a href="#" class="close" data-dismiss="alert">×</a>
                                    <strong>Success!</strong>@Html.ValidationSummary(true, "", new { @class = "text-success" })<br />
                                </div>
                            </div>
                        }
                    }
                    else if (ViewBag.DisplayMessage == "Info")
                    {
                        if (ViewData.ModelState[""] != null)
                        {
                            <div class="bs-example">
                                <div class="alert alert-danger fade in">
                                    <a href="#" class="close" data-dismiss="alert">×</a>
                                    <strong>Info!</strong>@Html.ValidationSummary(true, "", new { @class = "text-danger" })<br />
                                </div>
                            </div>
                        }
                    }
                    <div class="form-group">
                        <label for="email">Email</label>
                        @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary"><i class="fa fa-sign-in"></i> Log in</button>
                    </div>
                </form>
            </div>
        </div>


    </div>
    <!-- /.container -->
</div>
<!-- /#content -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
