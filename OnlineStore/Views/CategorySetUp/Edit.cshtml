@model  Category

@{
    ViewBag.Title = "Edit";
    try
    {
        var role = Convert.ToInt16(Session["userrole"].ToString());
        if (role == 1)
        {
            Layout = "~/Views/Shared/AdminLayoutPage.cshtml";
        }
        
        else if (role == 3)
        {
            Layout = "~/Views/Shared/DeveloperLayoutPage.cshtml";
        }
    }
    catch (Exception)
    {

    }
}

   <script>
        jQuery(document).ready(function () {
            Main.init();
        });
    </script>


<div class="row">
    <div class="col-sm-2">
        <a href="@Url.Action("Showlist", "CategorySetUp")" class="demo btn btn-blue">
            <i class="fa fa-arrow-left">
            </i> | Back to list
        </a>
    </div>
</div>
<div class="panel">
    <div class="panel-heading">
        <i class="fa fa-external-link-square"></i>
        Edit Category
        <div class="panel-tools">
            <a class="btn btn-xs btn-link panel-collapse collapses" href="#">
            </a>

        </div>
    </div>
    <div class="panel-body">
        <form role="form" class="form-horizontal" method="POST">
            @Html.AntiForgeryToken()
            @if (ViewBag.DisplayMessage == "success")
            {
                if (ViewData.ModelState[""] != null)
                {
                    <div class="bs-example">
                        <div class="alert alert-success fade in">
                            <a href="#" class="close" data-dismiss="alert">×</a>
                            <strong>Success!</strong>@Html.ValidationSummary(true, "", new { @class = "text-success" })<br />
                        </div>
                    </div>
                }
            }
            else if (ViewBag.DisplayMessage == "Info")
            {
                if (ViewData.ModelState[""] != null)
                {
                    <div class="bs-example">
                        <div class="alert alert-danger fade in">
                            <a href="#" class="close" data-dismiss="alert">×</a>
                            <strong>Alert!</strong>@Html.ValidationSummary(true, "", new { @class = "text-danger" })<br />
                        </div>
                    </div>
                }
            }
                    <div class="form-horizontal">

                        @Html.HiddenFor(model => model.CategoryID)

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control", @ReadOnly = false } })
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control", @ReadOnly = false } })
                                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control", @ReadOnly = false } })
                                @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" value="Save" id="btnSave" name="command" class="btn btn-primary">Update</button>
                            </div>
                        </div>
                    </div>
        </form>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
